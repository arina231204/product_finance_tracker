# Generated by Django 4.2 on 2023-04-18 10:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountingFeatures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packaging_type', models.CharField(choices=[('1', 'Фасовка'), ('2', 'Штучная'), ('3', 'Разливная ')], max_length=100, verbose_name='Тип учета фасовки')),
                ('accounting_type', models.CharField(choices=[('1', 'Без специализированного учета'), ('2', 'Алкогольный товар'), ('3', 'Учет по серийным номерам '), ('4', 'Средство индивидуальной защиты')], max_length=100, verbose_name='Тип учета')),
                ('product_code', models.CharField(max_length=255, verbose_name='Код вида продукции')),
                ('tare_capacity', models.PositiveSmallIntegerField(verbose_name='Емкость тары, л.')),
                ('strength', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Крепость')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('type', models.CharField(max_length=255, verbose_name='Тип')),
                ('product_type', models.CharField(choices=[('1', 'Не маркируется'), ('2', 'Обувь'), ('3', 'Одежда'), ('4', 'Постельное белье'), ('5', 'Духи и туалетная вода'), ('6', 'Фотокамеры и лампы-вспышки'), ('7', 'Шины и покрышки'), ('8', 'Молочная продукция'), ('9', 'Упакованная вода'), ('10', 'Альтернативная табачная продукция'), ('11', 'Никотиносодержащая продукция'), ('12', 'Табачная продукция')], max_length=255, verbose_name='Тип продукции')),
                ('tnved', models.CharField(max_length=255, verbose_name='ТН ВЭД')),
                ('gender', models.CharField(choices=[('1', 'Унисекс'), ('2', 'Мужской'), ('3', 'Женский'), ('4', 'Детский')], max_length=100, verbose_name='Целевой пол')),
                ('production_type', models.CharField(choices=[('1', 'Произведен в КР'), ('2', 'Ввезен в КР')], max_length=255, verbose_name='Тип производства')),
                ('traceable', models.BooleanField(verbose_name='Прослеживаемый')),
                ('kit', models.BooleanField(verbose_name='Комплект')),
            ],
            options={
                'verbose_name': 'Особенности учета',
                'verbose_name_plural': 'Особенности учета',
            },
        ),
        migrations.CreateModel(
            name='BankCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bic', models.CharField(max_length=9, verbose_name='БИК')),
                ('bank_name', models.CharField(max_length=255, verbose_name='Банк')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('correspondent_account', models.CharField(max_length=20, verbose_name='Корр. счет')),
                ('checking_account', models.CharField(max_length=20, verbose_name='Расчетный счет')),
                ('main_account', models.BooleanField(default=False, verbose_name='Расчетный счет')),
            ],
            options={
                'verbose_name_plural': 'Расчетные коды',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Contractor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('offer_sent', 'Выслано предложение'), ('negotiations', 'Переговоры'), ('deal_concluded', 'Сделка заключена'), ('deal_not_concluded', 'Сделка не заключена')], max_length=20, verbose_name='Статус')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('fax', models.CharField(blank=True, max_length=20, verbose_name='Факс')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Электронный адрес')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Фактический адрес')),
                ('address_comment', models.TextField(blank=True, verbose_name='Комментарий к адресу')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('code', models.CharField(blank=True, max_length=20, verbose_name='Код')),
                ('external_code', models.CharField(blank=True, max_length=20, verbose_name='Внешний код')),
                ('contractor_type', models.CharField(blank=True, choices=[('legal_entity', 'Юридическое лицо'), ('individual_entrepreneur', 'Индивидуальный предприниматель'), ('natural_person', 'Физическое лицо')], max_length=100, verbose_name='Тип контрагента')),
                ('inn', models.CharField(blank=True, max_length=14, verbose_name='ИНН')),
                ('legal_entity_name', models.CharField(blank=True, max_length=255, verbose_name='Полное наименование')),
                ('legal_entity_address', models.CharField(blank=True, max_length=255, verbose_name='Юридический адрес')),
                ('legal_entity_address_comment', models.TextField(blank=True, verbose_name='Комментарий к адресу')),
                ('kpp', models.CharField(blank=True, max_length=9, verbose_name='КПП')),
                ('ogrn', models.CharField(blank=True, max_length=15, verbose_name='ОГРН')),
                ('okpo', models.CharField(blank=True, max_length=10, verbose_name='ОКПО')),
                ('price_type', models.CharField(choices=[('1', 'Цена продажи')], default='1', max_length=50, verbose_name='Цены')),
                ('discount_card_number', models.CharField(max_length=50, verbose_name='Номер дисконтной карты')),
                ('employee', models.CharField(max_length=50, verbose_name='Сотрудник')),
                ('shared_access', models.BooleanField(default=False, verbose_name='Общий доступ')),
                ('bank_accounts', models.ManyToManyField(blank=True, to='store.bankcode', verbose_name='Расчетный счет')),
                ('contacts', models.ManyToManyField(blank=True, to='store.contact', verbose_name='Контактные лица')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Страна')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование группы')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделы',
            },
        ),
        migrations.CreateModel(
            name='EGAISCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='Код ЕГАИС')),
            ],
            options={
                'verbose_name': 'Код ЕГАИС',
                'verbose_name_plural': 'Коды ЕГАИС',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование группы')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('code', models.CharField(max_length=255, verbose_name='Код')),
                ('external_code', models.CharField(max_length=255, verbose_name='Внешний код')),
                ('is_included_in_tax_report', models.CharField(choices=[('1', 'Совпадает с группой'), ('2', 'ОСН'), ('3', 'УСН. Доход'), ('4', 'УСН. Доход-Расход'), ('5', 'ЕСХН'), ('6', 'ЕНВД'), ('7', 'Патент')], default='1', max_length=10, verbose_name='Система налогообложения')),
                ('employee', models.CharField(max_length=255, verbose_name='Сотрудник')),
                ('is_shared', models.BooleanField(default=False, verbose_name='Общий доступ')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.department', verbose_name='Отдел')),
                ('parent_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.group', verbose_name='Родительская группа')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='NDS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(99)], verbose_name='Ставка НДС')),
                ('comment', models.CharField(blank=True, max_length=32, null=True, verbose_name='Комментарий')),
                ('user', models.CharField(blank=True, max_length=32, null=True, verbose_name='Пользователь')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.department', verbose_name='Отдел')),
            ],
            options={
                'verbose_name': 'НДС',
                'verbose_name_plural': 'НДС',
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=20, verbose_name='Краткое наименование')),
                ('full_name', models.CharField(max_length=255, verbose_name='Полное наименование')),
                ('code', models.PositiveSmallIntegerField(unique=True, verbose_name='Цифровой код')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование товара')),
                ('description', models.TextField(verbose_name='Описание')),
                ('article', models.CharField(max_length=255, verbose_name='Артикул')),
                ('code', models.CharField(db_index=True, max_length=10, unique=True, verbose_name='Код')),
                ('external_code', models.CharField(max_length=255, verbose_name='Внешний код')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Вес')),
                ('volume', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Объем')),
                ('barcode_name', models.CharField(max_length=13, verbose_name='Штрихкод имя')),
                ('barcode', models.CharField(max_length=255, verbose_name='Штрихкод')),
                ('cash_receipt', models.BooleanField(default=False, verbose_name='Кассовый чек')),
                ('tax_system', models.CharField(choices=[('1', 'Совпадает с группой'), ('2', 'ОСН'), ('3', 'УСН. Доход'), ('4', 'УСН. Доход-Расход'), ('5', 'ЕСХН'), ('6', 'ЕНВД'), ('7', 'Патент')], default='1', max_length=10, verbose_name='Система налогообложения')),
                ('payment_attribute', models.CharField(choices=[('1', 'Совпадает с точкой'), ('2', 'Подакцизный товар'), ('3', 'Товар'), ('4', 'Подакцизный товар'), ('5', 'Составной предмет расчета'), ('6', 'Иной предмет расчета')], max_length=255, verbose_name='Признак предмета расчета')),
                ('employee', models.CharField(max_length=255, verbose_name='Сотрудник')),
                ('min_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Минимальная цена')),
                ('purchase_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Закупочная цена')),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Цена продажи')),
                ('allow_discount', models.BooleanField(default=False, verbose_name='Запретить скидки при продаже в розницу')),
                ('accountingFeatures', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.accountingfeatures', verbose_name='НДС')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.country', verbose_name='Страна')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.department', verbose_name='Отдел')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.group', verbose_name='Группа')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.contractor', verbose_name='Поставщик')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.unitofmeasurement', verbose_name='Единица измерения')),
                ('vat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.nds', verbose_name='НДС')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='vat_enabled',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.nds', verbose_name='НДС'),
        ),
        migrations.AddField(
            model_name='contractor',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.department', verbose_name='Отдел'),
        ),
        migrations.AddField(
            model_name='contractor',
            name='groups',
            field=models.ManyToManyField(blank=True, to='store.group', verbose_name='Группы'),
        ),
        migrations.AddField(
            model_name='accountingfeatures',
            name='egais_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.egaiscode', verbose_name='Код ЕГАИС'),
        ),
    ]
